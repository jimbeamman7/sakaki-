#!/bin/bash
#
# Automatically attempt to extend root partition (second partition
# on microSD card) to fill remaining free space on the card
#
# Operates on a live root filesystem: first pass will simply expand the
# partition, then reboot (as it is not possible to change the kernel partition
# table entry for / on a running system); on the second pass, we resize the
# root filesystem (this can be done 'live'), then add xdm to the default
# runlevel, and start it (to bring up the Xfce4 demouser session).
#
# Checks for a sentinel file "autoexpand_root_partition" on /boot (the
# microSD card's first partition), and will proceed only if found. On first
# run, it is replaced with the file "autoexpand_root_filesystem" (and on
# second run, this latter sentinel file is deleted).
#
# Copyright (c) 2017 sakaki <sakaki@deciban.com>
# License: GPL 3.0+
# NO WARRANTY

set -e
set -u

cecho() {
	echo "${1}" > /dev/console
}

ROOTDRIVE="/dev/mmcblk0"
ROOTPART="${ROOTDRIVE}p2"
SENTINEL1="/boot/autoexpand_root_partition"
SENTINEL2="/boot/autoexpand_root_filesystem"

if [ -f "${SENTINEL1}" ]; then
	# first boot, need to resize /dev/mmcblk0p2 (root) to fill disk
	# then, since this is /, need to reboot to get kernel to see it
	# after which its ext4 filesystem can be resized online
	cecho ""
	cecho "*******************************************************************"
	cecho "* Auto resizing root partition to fill microSD card - please wait *"
	cecho "*  (we will reboot immediately this is done, so kernel notices)   *"
	cecho "*******************************************************************"
	cecho ""
	rm -f "${SENTINEL1}"
	if [ -f "${SENTINEL1}" ]; then
		# might mean an ro filesystem, and we don't want an
		# infinite loop
		cecho "Failed to delete sentinel file '${SENTINEL1}'"
		exit 1
	fi
	# turn off swapfiles, for safety
	swapoff -a
	# sync filesystems before we begin, to minimize any damage if things
	# should go wrong
	sync
	# begin by resizing the root partition
	sfdisk --no-reread -N 2 <<<", +" "${ROOTDRIVE}"
	# create second sentinel to mark that we have done this
	touch "${SENTINEL2}"
	if ! [ -f "${SENTINEL2}" ]; then
		>&2 echo "Failed to create sentinel file '${SENTINEL2}' - exiting"
		exit 1
	fi
	cecho ""
	cecho "*******************************************************************"
	cecho "*  Resize completed - rebooting now (this will only happen once)  *"
	cecho "*******************************************************************"
	cecho ""
	# then reboot, but don't do it in the context of this, an init script
	nohup bash -c 'sleep 3; reboot' &>/dev/null&
elif [ -f "${SENTINEL2}" ]; then
	# second boot, partition has been resized (and kernel is aware); so now
	# we just need to update the filesystem, which can be done online
	cecho ""
	cecho "*******************************************************************"
	cecho "* Auto resizing root filesystem to fill partition 2 - please wait *"
	cecho "*******************************************************************"
	cecho ""
	rm -f "${SENTINEL2}"
	if [ -f "${SENTINEL2}" ]; then
		cecho "Failed to delete sentinel file '${SENTINEL1}' - exiting"
		exit 1
	fi
	# turn off swapfiles, for safety
	swapoff -a
	# sync filesystems before we begin, to minimize any damage if things
	# should go wrong
	sync
	# do an online resize of the root partition's ext4 filing system
	resize2fs -f "${ROOTPART}"
	# restore swaps
	swapon -a
	cecho ""
	cecho "*******************************************************************"
	cecho "*         Root filesytem resized OK - proceeding with boot!       *"
	cecho "*******************************************************************"
	cecho ""
	# start graphical login
	nohup bash -c 'sleep 1; rc-update add xdm default; rc' &>/dev/null&
else
	# no sentinel, just exit silently
	:
fi
exit 0

